/*
 File: /css/HW7.css
 91.461 Assignment 6: Creating an Interactive Dynamic Table
 Scott Mello, student, UMass Lowell Computer Science, scott_mello@student.uml.edu
 Copyright (c) 2016 by Scott Mello. All rights reserved. May be
freely copied or excerpted for educational purposes with credit to the
author. 

Description: The is the CSS for a single page web app that dynamically creates 
             a multiplication table based on form input from the user
Date created: 10/24/2016
*/

/* setting the backround color on the page */
html {
    background-color: #e9fce9;
    height: 95%;
    min-width: 400px;
}
body {
    height: 95%;
}
/* formatting Div around the form and reset button */
#NumberForm {
    display: inline-block;
    border: 2px solid #3377ff;
    width: 25%;
    height: 85%;
    background-color: #FFFFE6;
    border-radius: 20px;
    min-width: 300px;
    min-height: 591px;
    font-size: 18px;
    margin-left: 15px;
    margin-right: 25px;
}

/* adding some padding to the form only */
#NumberForm form {
    padding-left: 15px;
    padding-right: 15px;
    padding-top: 5px;
    padding-bottom: 5px;
    height: 100%;
    min-height: 100%;
}

/* divs around the text inputs */
#MultiplicandStart, #MultiplicandEnd, #MultiplierStart, #MultiplierEnd {
    display: inline-block;
    width: 100%;
}

/* labels for the input boxes */
label {
   display: inline-block;
   width: 100%;
   color: #3377ff;
}

/* formatting only text inputs */
input[type=text], select {
    width: 95%;
    padding: 12px 20px;
    margin: 8px 0;
    display: inline-block;
    border: 1px solid #ccc;
    border-radius: 8px;
    box-sizing: border-box;
}

/* spacing above the reset button */
input[type=reset] {
    margin-top: 5px;
}

/* formatting the reset and submit input (button) */
input[type=reset], input[type=submit] {
    cursor: pointer;
    padding: 14px 20px;
    width: 100%;
    border: 0px;
    border-radius: 8px;
    background-color: #4CAF50;
    color: white;
}

/* setting the background color when hovering on the reset and submit input (button) */
input[type=reset]:hover, input[type=submit]:hover {
    background-color: #45a049
}

span {
    font-size: 0.8em;
}
/* setting error messages to have no margins */
#myTableForm span.help-block.form-error {
    margin: 0;
}

/* height of input boxes p element*/
#inputs {
    height: 75%;
}

/* height of the submit and reset p element */
#buttons {
    height: 17%;
}

#inputs p label:not(:first-child) {
    color: red;
    font-size: .8em;
}

input.error {
   border: 1px solid red; 
}

input.valid {
    border: 1px solid green;
}